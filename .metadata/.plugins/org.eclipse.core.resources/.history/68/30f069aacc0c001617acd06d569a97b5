package libsys;

import java.util.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class DatabaseController {
	
	/**
	 * Puts the Account into the database.
	 * 
	 * @param a The Account to be placed into the database.
	 * @return true if the Account is successfully entered, false if not
	 */
	public boolean putAccount(Account a) {
		//TODO
		return false;
	}
	
	/**
	 * Gets a list of all Accounts in the system.
	 * 
	 * @return a list of all the Accounts in the system
	 */
	public List<Account> listUsers() {
		//TODO
		return null;
	}
	
	/**
	 * Gets the Account object from the database that has the given username.
	 * 
	 * @param username the username of the Account to be retrieved
	 * @return the Account in the database with the given username
	 */
	public Account getAccount(String username) {
		//TODO
		return null;
	}
	
	/**
	 * Removes the book with the given title and author from the database
	 * 
	 * @param title the title of the book to be removed
	 * @param author the author of the book to be removed
	 * @return true if the book has been successfully removed, false if not
	 */
	public boolean removeBook(String title, String author) {
		//TODO
		return false;
	}
	
	/**
	 * Puts the given Shelf object into the database
	 * 
	 * @param s the shelf to be inserted into the database
	 * @return true if the shelf has been successfully put into the database, false if not
	 */
	public boolean putShelf(Shelf s) {
		//TODO
		return false;
	}
	
	/**
	 * Puts the given Book object into the database
	 * 
	 * @param b the Book object to be put into the database
	 * @return true if the book has been successfully put into the database, false if not
	 */
	public boolean putBook(Book b) {
		//TODO
		return false;
	}
	
	/**
	 * Gets from the database the shelf with the given ID number
	 * 
	 * @param sid the ID number of the Shelf object to be gotten from the database
	 * @return the Shelf object with the given ID number
	 */
	public Shelf getShelf(int sid) {
		//TODO
		return null;
	}
	
	public void testConnection() {
		Connection conn = createConnection();
		if(conn != null) {
			System.out.println("Connection succeeded!");
			try {
				conn.close();
			}
			catch(SQLException e) {
				e.printStackTrace();
			}
		}
		else {
			System.out.println("Connection failed!");
		}
	}
	
	private Connection createConnection() {
		try {
			Class.forName("com.mysql.jdbc.Driver");
		}
		catch(Exception e){
			e.printStackTrace();
		}
		
		Connection conn = null;
		String dbUrl = "jdbc:mysql://173.17.63.77:3306/Library_db";
		String user = "team7";
		String password = "^h;>8jp";
		try {
			conn = DriverManager.getConnection(dbUrl, user, password);
		}
		catch(SQLException e) {
			e.printStackTrace();
		}
		finally {
			return conn;
		}
	}
	
}
